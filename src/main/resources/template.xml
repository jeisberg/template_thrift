<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">    
	<bean id="properties" class="com.lockerz.thrift.template.utilities.PlaceholderConfigurer" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      	<property name="driverClass"><value>${c3po.jdbc.driver}</value></property>
      	<property name="jdbcUrl"><value>${c3po.jdbc.url}</value></property>
      	<property name="user"><value>${c3po.jdbc.user}</value></property>
      	<property name="password"><value>${c3po.jdbc.password}</value></property>
      	<property name="acquireIncrement"><value>${c3po.jdbc.acquireIncrement}</value></property>
		<property name="initialPoolSize"><value>${c3po.jdbc.initialPoolSize}</value></property>
		<property name="maxPoolSize"><value>${c3po.jdbc.maxPoolSize}</value></property>
		<property name="minPoolSize"><value>${c3po.jdbc.minPoolSize}</value></property>
		<property name="maxIdleTime"><value>${c3po.jdbc.maxIdleTime}</value></property>
    </bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="hibernateProperties">
    		<props>
    			<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            	<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            	<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
    			<prop key="hibernate.memcached.servers">${hibernate.memcached.servers}</prop>
    			<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
    			<prop key="hibernate.dialect">${hibernate.dialect}</prop>
    			<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
        	</props>
    	</property>
    	<property name="dataSource" ref="dataSource"/>
    	<property name="mappingResources">
        	<list>
            	<value>template.hbm.xml</value>
        	</list>
    	</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<property name="sessionFactory">
        	<ref bean="sessionFactory"/>
    	</property>
	</bean>
	<bean id="templateDao" class="com.lockerz.thrift.template.dao.TemplateDaoImpl">
    	<property name="hibernateTemplate">
        	<ref bean="hibernateTemplate"/>    
    	</property>
	</bean>
	<bean id="templateAuthorizer" class="com.lockerz.thrift.template.auth.TokenAuthorizerImpl">
		<property name="token">
        	<value>${authorizer.token}</value>
    	</property>
	</bean>
	<bean id="templateService" class="com.lockerz.thrift.template.services.TemplateServiceImpl">
		<property name="dao">
        	<ref bean="templateDao"/>
    	</property>
    	<property name="authorizer">
        	<ref bean="templateAuthorizer"/>
    	</property>
	</bean>
</beans>